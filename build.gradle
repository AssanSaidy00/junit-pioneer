group 'org.codefx.junit'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'com.diffplug.gradle.spotless'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
}

dependencies {
    compile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.0.0-SNAPSHOT'
}

buildscript {
    repositories {
        mavenLocal()
        maven { url 'https://plugins.gradle.org/m2/' }
    }

    dependencies {
        classpath group: 'com.diffplug.gradle.spotless', name: 'spotless', version: '2.2.0'
    }
}

spotless {
    def headerFile = rootProject.file('.infra/spotless/eclipse-public-license-1.0.java')

    java {
        licenseHeaderFile headerFile, '(package|import) '
        importOrderFile rootProject.file('.infra/eclipse/junit-eclipse.importorder')
        eclipseFormatFile rootProject.file('.infra/eclipse/junit-eclipse-formatter-settings.xml')

        trimTrailingWhitespace()
        endWithNewline()

        custom 'Lambda fix', { it.replace('} )', '})').replace('} ,', '},') }
    }

    format 'groovy', {
        target '**/*.groovy'
        indentWithTabs()
        trimTrailingWhitespace()
        endWithNewline()
        licenseHeaderFile headerFile, "package "

        customReplaceRegex 'class-level Javadoc indentation fix', /^\*/, ' *'
        customReplaceRegex 'nested Javadoc indentation fix', /\t\*/, '\t *'
    }
}

configure(rootProject) {

    task wrapper(type: Wrapper) {
        description = 'Generates gradlew and gradlew.bat scripts'
        gradleVersion = '3.2'
        jarFile = "${project.projectDir}/.infra/gradle/gradle-wrapper.jar"
    }

}
